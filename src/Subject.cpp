#include "Subject.hpp"

///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////
void Subject::notifyObservers(int what, void* data, int size) const {
	for (auto & o : m_observer) {
		o->notify(what, data, size);
	}
}

///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////
void Subject::attachObserver(Observer* observer) {
	auto found = std::find(m_observer.begin(), m_observer.end(), observer);
	if (found == m_observer.end()) {
		m_observer.push_back(observer);
	}
}

///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////
void Subject::removeObserver(Observer* observer) {
	auto found = std::find(m_observer.begin(), m_observer.end(), observer);
	if (found != m_observer.end()) {
		m_observer.erase(found);
	}
}